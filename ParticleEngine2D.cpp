#include "ParticleEngine2D.h"

#include"ParticleBatch2D.h"
#include"SpriteBatch.h"

namespace Adina{
	////==================================================================================
	////==================================================================================
	////==================================================================================
	ParticleEngine2D::ParticleEngine2D()
	{
		//Empty
	}
	////===///============================================================================
	////===///============================================================================
	////===///============================================================================
	//After adding a particle batch, the ParticleEngine2D becomes
	//responsible for deallocation
	ParticleEngine2D::~ParticleEngine2D()
	{
		/*
		for (auto& b : m_batches){
			delete[] b;
		}
		*/
		for (int i = 0; i < m_batches.size(); i++){
			delete m_batches[i];
		}
	}
	////==================================================================================
	////==================================================================================
	////==================================================================================
	void ParticleEngine2D::addParticleBatch(ParticleBatch2D* particleBatch2D)
	{
		m_batches.push_back(particleBatch2D);
	}
	////==================================================================================
	////==================================================================================
	////==================================================================================
	void ParticleEngine2D::update(float deltaTime)
	{
		for (auto& b : m_batches)
		{
			b->update(deltaTime);
		}
	}
	////==================================================================================
	////==================================================================================
	////==================================================================================
	void ParticleEngine2D::draw(SpriteBatch* spriteBatch)
	{
		for (auto& b : m_batches)
		{
			spriteBatch->begin();
			b->draw(spriteBatch);
			spriteBatch->end();
			spriteBatch->renderBatch();
		}
	}
	////==================================================================================
	////==================================================================================
	////==================================================================================
}
